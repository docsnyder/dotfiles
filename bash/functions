# Switch to a gem directory, trying to match your name the best
function c { 
  cd ~/code/$1;
}
function egcc {
  ./script/eventGenerator.sh ClearCacheEvent $1
}
function egct {
  ./script/eventGenerator.sh CalculationTriggerEvent $1
}
function cdgem {
  gem_dir=`gem env | grep INSTALLATION | cut -d' ' -f6`
  cd $gem_dir/gems
  cd `ls|grep $1|sort|tail -1`
}
function cd() {
    builtin cd $@
    chpwd
}
function chpwd() {
	a
}
function sgi {
  sudo gem install $1
}

function sagi {
sudo apt-get -y install $1 
}

function syi {
sudo yum -y install $1
}

function glg { 
gem list | grep $1
}


function rrg { 
bundle exec rake routes | grep $1
}

function log {
	if [ $# -eq 0 ]
	then
	  file=`ls -tr ~/jakarta-tomcat/logs/ctv4* | grep -v "error" | tail -1`
        else
	  file=`ls -tr ~/jakarta-tomcat/logs/ctv4* | grep -v "error" | grep "$@" | tail -1`
	fi
        echo "====> $file <==="
        tail -f "$file"
}
function adbi {
  ant dbinsert;
  if [ -e "./script/eventGenerator.sh" ]
  then
    ./script/eventGenerator.sh ClearCacheEvent Dictionary
  fi
}
#################
#   svn stuff   #
#################

function s () {
	if [ $# -eq 0 ]
	then
		svn st
	else
		svn "$@"
	fi
}

function lbr() {
  svn ls http://calypso.novacom.local/repos/$1/branches
}

function cobr() {
  # change into branches directory
  br;
  # create directory for branch, cd into it
  mkdir $2; cd $2;
  # checkout branch
  svn co http://calypso.novacom.local/repos/$1/branches/$2/$1;
  # cd into branch
  cd $1;
}
#################
#   git stuff   #
#################
function parse_git_branch {
  val=`git_branch_name | sed 's_\(.*\)_(\1)_'`
  echo "$val"
}

function git-new-remote-tracking {
  git checkout -b $1 && git push -u origin $1
}

function git_branch_name {
  val=`git branch 2>/dev/null | grep '^*' | colrm 1 2`
  echo "$val"
}

function git-done {
  branch=`git_branch_name`
  git checkout master && git pull --rebase 
  git checkout $branch && git rebase master && git checkout master && git merge $branch && bundle install && bundle exec rake db:migrate && bundle exec rake && git push && git branch -d $branch && git push origin :$branch
}

function git-nuke {
  git branch -D $1 && git push origin :$1
}

# Creating a remote tracking branch
function track { 
  git branch --track $1 "origin/$1"
}

function g {
  if [[ $# > 0 ]]; then
    git "$@"
  else
    git status
  fi
}

